[{"/Users/mariyan/Sites/snake/src/index.js":"1","/Users/mariyan/Sites/snake/src/App.js":"2","/Users/mariyan/Sites/snake/src/components/hooks/useEventListener.js":"3","/Users/mariyan/Sites/snake/src/components/common/Grid.js":"4","/Users/mariyan/Sites/snake/src/utils/randomNumberTo.js":"5"},{"size":126,"mtime":1608481973925,"results":"6","hashOfConfig":"7"},{"size":1196,"mtime":1608485235332,"results":"8","hashOfConfig":"7"},{"size":622,"mtime":1608482700148,"results":"9","hashOfConfig":"7"},{"size":1439,"mtime":1608485089621,"results":"10","hashOfConfig":"7"},{"size":119,"mtime":1608484510759,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"jshixn",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/mariyan/Sites/snake/src/index.js",[],"/Users/mariyan/Sites/snake/src/App.js",[],"/Users/mariyan/Sites/snake/src/components/hooks/useEventListener.js",[],["24","25"],"/Users/mariyan/Sites/snake/src/components/common/Grid.js",["26"],"import styled from \"styled-components\";\nimport cn from \"classnames\";\n\nconst Grid = ({ children, size = 10, snake }) => {\n  const rowsAndColumns = [...Array(size)];\n\n  console.log(snake);\n  const findSnakePosition = (column, row) => {\n    for (let index = 0; index < snake.length; index++) {\n      const { isHead, x, y } = snake[index];\n\n      if (x === column && y === row) {\n        return isHead ? \"is-head\" : \"is-body\";\n      }\n    }\n\n    return false;\n  };\n\n  return (\n    <div>\n      <InnerWrap>\n        {rowsAndColumns.map((el, columnIndex) => (\n          <Column key={`column-${columnIndex}`}>\n            {rowsAndColumns.map((el, rowIndex) => (\n              <Row\n                className={findSnakePosition(columnIndex + 1, rowIndex + 1)}\n                key={`row-${rowIndex}`}\n              >\n                {`${columnIndex + 1}-${rowIndex + 1}`}\n              </Row>\n            ))}\n          </Column>\n        ))}\n      </InnerWrap>\n    </div>\n  );\n};\n\nexport default Grid;\n\nconst InnerWrap = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst Row = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 50px;\n  height: 50px;\n  border: 1px solid black;\n\n  &.is-head {\n    background-color: green;\n  }\n\n  &.is-body {\n    background-color: blue;\n  }\n`;\n\nconst Column = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column-reverse;\n`;\n","/Users/mariyan/Sites/snake/src/utils/randomNumberTo.js",[],{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":2,"column":8,"nodeType":"33","messageId":"34","endLine":2,"endColumn":10},"no-native-reassign",["35"],"no-negated-in-lhs",["36"],"no-unused-vars","'cn' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]